@using Microsoft.AspNet.Identity
@using PagedList.Mvc;
@model Simple02.Models.FunctionViewModels.InOneDcsnViewModel
@Html.Partial("_BasePartial")
@{
    var username = User.Identity.GetUserId();
    var holderId = Html.ValueFor(m => m.asmtoDiscuss.ToEqry.Noter.Id).ToString();
    string st = Html.ValueFor(m => m.asmtoDiscuss.dcsnStatus).ToString();
    ApplicationDbContext getchildrens = new ApplicationDbContext();
}

<div class="row">
    <ul class="breadcrumb">
        <li>@Html.ActionLink("Home", "Index", "Home")</li>
        <li>@Html.ActionLink("Library", "Library", "Home")</li>
        <li>@Html.ActionLink("CaseDetail", "Detail", "Enquirer", new { EID = Html.ValueFor(m => m.asmtoDiscuss.ToEqry.EID) }, null)</li>
        <li>Discussion</li>
    </ul>
</div>
<br />
    

@*Completed Case can not return to the Assignment Page, but can back to CaseDetail Page then back to Library*@
<div class="row">
    <table cellpadding="3" class="table-striped">
        <tr>
            <th colspan="2"><h4>@Html.ValueFor(m => m.asmtoDiscuss.ToEqry.Title)</h4></th>
        </tr>
        <tr>
            <td width=65%>               
                <div class="col-md-10">
                    @Html.Label("Product :", new { @class = "col-md-5 control-label" })
                    @Html.ValueFor(m => m.asmtoDiscuss.ToEqry.Product)
                </div>
                <div class="col-md-10">
                    @Html.Label("Service Requested :", new { @class = "col-md-5 control-label" })
                    @Html.ValueFor(m => m.asmtoDiscuss.ToEqry.Service)
                </div>
                <div class="col-md-10">
                    @Html.Label("Product Destination :", new { @class = "col-md-5 control-label" })
                    @Html.ValueFor(m => m.asmtoDiscuss.ToEqry.Destination)
                </div>

            </td>
            <td with=35% rowspan="2">
                <div class="col-md-12">

                    @Html.Label("Attachments:")
                    <dl class="col-md-12">
                        @if (Model.asmtoDiscuss.ToEqry.FilePaths.Any(f => f.FileType == FileType.Ref))
                        {
                            <dt>
                                Photos
                            </dt>
                            foreach (FilePath atmt in Model.asmtoDiscuss.ToEqry.FilePaths.Where(f => f.FileType == FileType.Ref).AsEnumerable())
                            {
                                <dd style="display:inline">
                                    <a href="@Url.Action("Download", "Enquirer", new {ImageName = atmt.FileName })"><img src="~/Images/@atmt.FileName" alt="Ref" width="30" height="30" /></a>
                                    &nbsp;&nbsp;
                                </dd>
                            }

                        }
                        @if (Model.asmtoDiscuss.ToEqry.FilePaths.Any(f => f.FileType == FileType.Tex))
                        {
                            <dt>
                                Non-photo Attachments
                            </dt>
                            foreach (FilePath atmt in Model.asmtoDiscuss.ToEqry.FilePaths.Where(f => f.FileType == FileType.Tex).AsEnumerable())
                            {

                                <dd>
                                    @Html.ActionLink(atmt.OrgnFileName, "DownloadTF", "Enquirer", routeValues: new
                               {
                                   TextFileName = atmt.FileName,
                                   ContentType = atmt.ContentType,
                                   DownloadName = atmt.OrgnFileName
                               }, htmlAttributes: null)
                                </dd>
                            }

                        }

                    </dl>

                </div>

            </td>

        </tr>
        <tr>
            <td width=65%>
                
                <div class="col-md-10">
                    @Html.Label("Query Details :", new { @class = "col-md-5 control-label"})
                    <div class="col-md-8">
                        @Html.ValueFor(m => m.asmtoDiscuss.ToEqry.Qdetail)
                    </div>
                    
                </div>
            </td>
        </tr>
    </table>
    @Html.HiddenFor(m => m.asmtoDiscuss.AID)
    <p>&nbsp;</p>
</div>
<div class="row">
    <table cellpadding="10" class="table">
        <tr>
            <th></th>
            <th>
                @Html.ValueFor(m => m.Pagedpostslist.Count) &nbsp; Posts
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            @Html.Label("Current Participants:", new { @class = "text-info" })&nbsp;
            @for (int i = 0; i < Model.participants.Count; i++)
            {
                @Html.ValueFor(m => m.participants[i].UserName);
                <text>&nbsp;</text>
            }
            [Invite Button: use jquery dialoge, must use ajax action link ?]
        </th>
    </tr>
    @for (var i = 0; i < Model.Pagedpostslist.Count; i++)
    {
        string test = "Replying" + @i;
        <tr>

            @if (Model.Pagedpostslist[@i].RlyWhich != null)
            {
                <td width=1%></td>
                    <td>
                        <p>
                            @Html.ValueFor(m => m.Pagedpostslist[@i].Poster.UserName)
                            <text class="text-info"> replies to </text>@Html.ValueFor(m => m.Pagedpostslist[@i].RlyWhich.Poster.UserName)&nbsp;&nbsp;
                            Time: @Html.ValueFor(m => m.Pagedpostslist[@i].postingTime)&nbsp;&nbsp;
                            @{
                                string postername = Html.ValueFor(m => m.Pagedpostslist[@i].Poster.Id).ToString();
                                string pId = Html.ValueFor(m => m.Pagedpostslist[@i].PID).ToString();
                                string orct = Html.ValueFor(m => m.Pagedpostslist[@i].content).ToString();
                                var childrens = getchildrens.Posts.Where(p => p.RlyWhich.PID.ToString() == pId).AsEnumerable();
                                if (postername == username && childrens.Any() == false)
                                {
                                    <button type="button" data-pCnt=@orct data-pID=@pId name="btnDel" class="btn-EdtPost"><img src="~/Icons/Edit.png" width=19 height=19 /></button>
                                    <text>&nbsp;</text>
                                    <button type="button" data-pID=@pId name="btnDel" class="btn-DelPost"><img src="~/Icons/delete.ico" width=19 height=19 /></button>
                                    
                                }
                            }
                        </p>
                        <p class="text-content">
                            @Html.ValueFor(m => m.Pagedpostslist[@i].content).ToString()
                        </p>
                        <p>
                            @if (Model.Pagedpostslist[@i].FilePaths.Any())
                            {
                            <p>

                                <dl>
                                    @if (Model.Pagedpostslist[@i].FilePaths.Any(f => f.FileType == FileType.Ref))
                                    {
                                        <dt>
                                            Photos
                                        </dt>
                                        foreach (FilePath atmt in Model.Pagedpostslist[@i].FilePaths.Where(f => f.FileType == FileType.Ref).AsEnumerable())
                                        {
                                            <dd style="display:inline">
                                                <a href="@Url.Action("Download", "Enquirer", new { ImageName = atmt.FileName })"><img src="~/Images/@atmt.FileName" alt="Ref" width="28" height="28" /></a>
                                                &nbsp;&nbsp;
                                            </dd>
                                        }

                                    }
                                    @if (Model.Pagedpostslist[@i].FilePaths.Any(f => f.FileType == FileType.Tex))
                                    {
                                        <dt>
                                            Non-photo Attachment
                                        </dt>
                                        foreach (FilePath atmt in Model.Pagedpostslist[@i].FilePaths.Where(f => f.FileType == FileType.Tex).AsEnumerable())
                                        {

                                            <dd>
                                                @Html.ActionLink(atmt.OrgnFileName, "DownloadTF", "Enquirer", routeValues: new
                                           {
                                               TextFileName = atmt.FileName,
                                               ContentType = atmt.ContentType,
                                               DownloadName = atmt.OrgnFileName
                                           }, htmlAttributes: null)
                                            </dd>
                                        }

                                    }

                                </dl>
                            </p>
                            }

                            <p>
                            <p>
                                Useful :
                                &nbsp;
                                <a href="@Url.Action("VoteFor", "Enquirer", new { aId = Html.ValueFor(m => m.asmtoDiscuss.AID), pId = Html.ValueFor(m => m.Pagedpostslist[i].PID) })"><img src="~/Icons/Like.ico" alt="" width="16" height="16" /></a>
                                @Html.ValueFor(m => m.Pagedpostslist[@i].pvoting.forvotes)
                                &nbsp;
                                @Ajax.ActionLink("Reply", "ReplyPost", new { ParentId = Html.ValueFor(m => m.Pagedpostslist[i].PID), AnswerId = Html.ValueFor(m => m.asmtoDiscuss.AID), CurrentPage = Html.ValueFor(m => m.CurrentPage) }, new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = test }, null)
                            </p>
                            <div id=@test>

                            </div>
                        </td>
            }
            else
            {
                <td colspan="2">
                        <p>
                            @Html.ValueFor(m => m.Pagedpostslist[@i].Poster.UserName)&nbsp;&nbsp;
                            Time: @Html.ValueFor(m => m.Pagedpostslist[@i].postingTime)&nbsp;&nbsp;
                            @{
                                string postername = Html.ValueFor(m => m.Pagedpostslist[@i].Poster.Id).ToString();
                                string pId = Html.ValueFor(m => m.Pagedpostslist[@i].PID).ToString();
                                string orct= Html.ValueFor(m => m.Pagedpostslist[@i].content).ToString();
                                var childrens = getchildrens.Posts.Where(p => p.RlyWhich.PID.ToString() == pId).AsEnumerable();
                                if (postername == username && childrens.Any()==false)
                                {
                                    <button type="button" data-pCnt=@orct data-pID=@pId name="btnDel" class="btn-EdtPost"><img src="~/Icons/Edit.png" width=19 height=19 /></button>
                                    <text>&nbsp;</text>
                                    <button type="button" data-pID=@pId name="btnDel" class="btn-DelPost"><img src="~/Icons/delete.ico" width=19 height=19 /></button>
                                }
                            }

                        </p>

                        <p class="text-content">
                            @Html.ValueFor(m => m.Pagedpostslist[@i].content).ToString()
                        </p>
                        <p>
                            @if (Model.Pagedpostslist[@i].FilePaths.Any())
                            {
                            <p>
                                <dl>
                                    @if (Model.Pagedpostslist[@i].FilePaths.Any(f => f.FileType == FileType.Ref))
                                    {
                                        <dt>
                                            Photos
                                        </dt>
                                        foreach (FilePath atmt in Model.Pagedpostslist[@i].FilePaths.Where(f => f.FileType == FileType.Ref).AsEnumerable())
                                        {
                                            <dd style="display:inline">
                                                <a href="@Url.Action("Download", "Enquirer", new {ImageName = atmt.FileName })"><img src="~/Images/@atmt.FileName" alt="Ref" width="30" height="30" /></a>
                                                &nbsp;&nbsp;
                                            </dd>
                                        }

                                    }
                                    @if (Model.Pagedpostslist[@i].FilePaths.Any(f => f.FileType == FileType.Tex))
                                    {
                                        <dt>
                                            Non-photo Attachments
                                        </dt>
                                        foreach (FilePath atmt in Model.Pagedpostslist[@i].FilePaths.Where(f => f.FileType == FileType.Tex).AsEnumerable())
                                        {

                                            <dd>
                                                @Html.ActionLink(atmt.OrgnFileName, "DownloadTF", "Enquirer", routeValues: new
                                       {
                                           TextFileName = atmt.FileName,
                                           ContentType = atmt.ContentType,
                                           DownloadName = atmt.OrgnFileName
                                       }, htmlAttributes: null)
                                            </dd>
                                        }

                                    }

                                </dl>
                            </p>
                            }

                            <p>
                            <p>
                                Useful :
                                &nbsp;
                                <a href="@Url.Action("VoteFor", "Enquirer", new { aId = Html.ValueFor(m => m.asmtoDiscuss.AID), pId = Html.ValueFor(m => m.Pagedpostslist[i].PID) })"><img src="~/Icons/Like.ico" alt="" width="16" height="16" /></a>
                                @Html.ValueFor(m => m.Pagedpostslist[@i].pvoting.forvotes)
                                &nbsp;
                                @Ajax.ActionLink("Reply", "ReplyPost", new { PackUp = ViewBag.pkp, ParentId = Html.ValueFor(m => m.Pagedpostslist[i].PID), AnswerId = Html.ValueFor(m => m.asmtoDiscuss.AID), CurrentPage = Html.ValueFor(m => m.CurrentPage) }, new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = test }, null)
                            </p>
                            <div id=@test>

                            </div>
                         
                 </td>
            }


        </tr>
    }
</table>
    Page @ViewBag.PageNumber of @ViewBag.PageCount
    @Html.PagedListPager(Model.Pagedpostslist, page => Url.Action("Join", new { page, AID = Html.ValueFor(m => m.asmtoDiscuss.AID)}))


    @using (Html.BeginForm("Post", "Enquirer", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
        @Html.AntiForgeryToken()
        <h4>@ViewBag.massage</h4>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.Label("Add your content:", new { @class = "col-md-5 control-label" })
                    <p>&nbsp;</p>
                    <div class="col-md-12">
                        @Html.TextAreaFor(m => m.mycurrentpost.content, new { @class = "board", rows = "4" })
                    </div>
                    <div class="col-md-12">
                        <input type="file" id=0 name="uploads" class="input-group-sm col-md-offset-0 col-md-6" />
                        <div id="MoreFileErs">
                            @Html.Raw(Ajax.ActionLink("[replacethis]", "MoreFileEntries", "Home", new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = "MoreFileErs" }).ToHtmlString().Replace("[replacethis]", "<img src=\"/Icons/AddAthmt.png\" width=20 height=20/>"))
                        </div>
                    </div>
                </div>
                @Html.HiddenFor(m => m.asmtoDiscuss.AID) @Html.HiddenFor(m => m.LastPage)
                <div class="form-group">
                    <div class="col-md-offset-0 col-md-10">
                        <form method="post">
                            <input type="submit" value="Post" name="btnSubmit" class="btn btn-default" />
                            <input type="reset" value="Clear" name="btnClear" class="btn btn-default" />
                        </form>
                    </div>
                </div>

    }
</div>
       
        

@section scripts{
                            @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.js")
    @for (int i = 0; i < ViewBag.len; i++)
    {
        string divid = "#Replying" + @i;
        <script type="text/javascript">
        function OnSuccess(response) {
           $(@divid).html(response);
                                }

        function OnFailure(response) {
           alert("Whoops! That didn't go so well did it?");
                                }
        </script>
    }

    <script type="text/javascript">
        $(".btn-DelPost").on("click", function () {
            var button = $(this);
            bootbox.confirm("Are you sure you want to delete this post ?", function (result) {
                if (result) {

                    $.ajax({
                        url: '/Enquirer/DelPost/?PID=' + button.attr("data-pID"),
                        //method:"DELETE",
                        success: function () {
                            button.parents("tr").remove();
                        }
                    })
                    .success(function (result) {
                        bootbox.alert("Successfully Deleted !");
                    })
                    .error(function (xhr, status) {
                        alert(status);
                    })
           
                }
            });
        });

        $(".btn-EdtPost").on("click", function () {
            var button = $(this);
            bootbox.prompt({
                title: "Post can be edit before there are replies !",
                inputType: 'textarea',
                value: button.attr("data-pCnt"),
                callback: function (result) {
                    if (result) {
                        $.ajax({
                            url: '/Enquirer/EdPost/?PID=' + button.attr("data-pID"),
                            //method:"DELETE",
                            //type: 'POST',
                            data: { content: result },
                            success: function () {
                                bootbox.alert("Successfully Updated !");
                            }
                        })
                    }
                         
                }
            });
        });
    </script>

  }




@*

    bootbox.alert("Successfully Updated !");

    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <div class="checkbox">
                                @Html.CheckBoxFor(m => m.mycurrentpost.IsAnonymous)
                                @Html.LabelFor(m => m.mycurrentpost.IsAnonymous)
                            </div>
                        </div>
                    </div>

         @Html.Raw(Html.ActionLink("[replacethis]", "EdPost", "Enquirer", routeValues: new { EID = Html.ValueFor(m => m.asmtoDiscuss.ToEqry.EID) }, htmlAttributes: null).ToHtmlString().Replace("[replacethis]", "<img src=\"/Icons/Edit.png\" width=17 height=17/>"))
         @Html.Raw(Html.ActionLink("[replacethis]", "DelPost", "Enquirer", routeValues: new { EID = Html.ValueFor(m => m.asmtoDiscuss.ToEqry.EID) }, htmlAttributes: new { id = "DelPost" }).ToHtmlString().Replace("[replacethis]", "<img src=\"/Icons/delete.ico\" width=19 height=19/>"))

*@





